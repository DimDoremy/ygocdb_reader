use clap::{App, Arg, ArgMatches};

pub fn app_builder(version: &str) -> ArgMatches<'static> {
    App::new("Ygopro-cdb Command Reader")
        .version(version)
        .author("Dim Doremy <DimDoremy@zoho.com.cn>")
        .about("Rust编写的命令行ygopro的cdb读取工具")
        .arg(
            Arg::with_name("FILE")
                .short("f")
                .long("file")
                .takes_value(true)
                .required(true)
                .help("打开ygopro的cdb数据库文件"),
        )
        .arg(
            Arg::with_name("HYPER")
                .short("H")
                .long("hyper")
                .help("开启高级查询，支持多参数同时查询"),
        )
        .arg(
            Arg::with_name("ATK")
                .short("a")
                .long("atk")
                .takes_value(true)
                .help("通过攻击力搜索相等的卡"),
        )
        .arg(
            Arg::with_name("ATKUP")
                .long("au")
                .takes_value(true)
                .help("通过攻击力搜索大于的卡"),
        )
        .arg(
            Arg::with_name("ATKDOWN")
                .long("af")
                .takes_value(true)
                .help("通过攻击力搜索小于的卡"),
        )
        .arg(
            Arg::with_name("DEF")
                .short("d")
                .long("def")
                .takes_value(true)
                .help("通过守备力搜索相等的卡"),
        )
        .arg(
            Arg::with_name("DEFUP")
                .long("du")
                .takes_value(true)
                .help("通过守备力搜索大于的卡"),
        )
        .arg(
            Arg::with_name("DEFDOWN")
                .long("dd")
                .takes_value(true)
                .help("通过守备力搜索小于的卡"),
        )
        .arg(
            Arg::with_name("KIND")
                .short("k")
                .long("kind")
                .takes_value(true)
                .help("通过卡片种类搜索"),
        )
        .arg(
            Arg::with_name("CODE")
                .short("c")
                .long("code")
                .takes_value(true)
                .help("通过卡密搜索"),
        )
        .arg(
            Arg::with_name("EFFECT")
                .short("e")
                .long("effect")
                .takes_value(true)
                .help("通过效果描述模糊搜索"),
        )
        .arg(
            Arg::with_name("NAME")
                .short("n")
                .long("name")
                .takes_value(true)
                .help("通过名称模糊搜索"),
        )
        .get_matches()
}
